// Code generated by MockGen. DO NOT EDIT.
// Source: workflow_modifier.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	daisy "github.com/GoogleCloudPlatform/compute-image-tools/daisy"
	gomock "github.com/golang/mock/gomock"
)

// MockWorkflowModifier is a mock of WorkflowModifier interface.
type MockWorkflowModifier struct {
	ctrl     *gomock.Controller
	recorder *MockWorkflowModifierMockRecorder
}

// MockWorkflowModifierMockRecorder is the mock recorder for MockWorkflowModifier.
type MockWorkflowModifierMockRecorder struct {
	mock *MockWorkflowModifier
}

// NewMockWorkflowModifier creates a new mock instance.
func NewMockWorkflowModifier(ctrl *gomock.Controller) *MockWorkflowModifier {
	mock := &MockWorkflowModifier{ctrl: ctrl}
	mock.recorder = &MockWorkflowModifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkflowModifier) EXPECT() *MockWorkflowModifierMockRecorder {
	return m.recorder
}

// Modify mocks base method.
func (m *MockWorkflowModifier) Modify(wf *daisy.Workflow) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Modify", wf)
	ret0, _ := ret[0].(error)
	return ret0
}

// Modify indicates an expected call of Modify.
func (mr *MockWorkflowModifierMockRecorder) Modify(wf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Modify", reflect.TypeOf((*MockWorkflowModifier)(nil).Modify), wf)
}
