// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/gce_ovf_export/domain (interfaces: OvfExportParamValidator)

// Package mocks is a generated GoMock package.
package mocks

import (
	ovfexportdomain "github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/gce_ovf_export/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOvfExportParamValidator is a mock of OvfExportParamValidator interface
type MockOvfExportParamValidator struct {
	ctrl     *gomock.Controller
	recorder *MockOvfExportParamValidatorMockRecorder
}

// MockOvfExportParamValidatorMockRecorder is the mock recorder for MockOvfExportParamValidator
type MockOvfExportParamValidatorMockRecorder struct {
	mock *MockOvfExportParamValidator
}

// NewMockOvfExportParamValidator creates a new mock instance
func NewMockOvfExportParamValidator(ctrl *gomock.Controller) *MockOvfExportParamValidator {
	mock := &MockOvfExportParamValidator{ctrl: ctrl}
	mock.recorder = &MockOvfExportParamValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOvfExportParamValidator) EXPECT() *MockOvfExportParamValidatorMockRecorder {
	return m.recorder
}

// ValidateAndParseParams mocks base method
func (m *MockOvfExportParamValidator) ValidateAndParseParams(arg0 *ovfexportdomain.OVFExportArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAndParseParams", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateAndParseParams indicates an expected call of ValidateAndParseParams
func (mr *MockOvfExportParamValidatorMockRecorder) ValidateAndParseParams(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAndParseParams", reflect.TypeOf((*MockOvfExportParamValidator)(nil).ValidateAndParseParams), arg0)
}
