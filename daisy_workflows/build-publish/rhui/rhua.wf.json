{
  "Name": "build-rhua",
  "DefaultTimeout": "60m",
  "Project": "gce-image-builder",
  "Zone": "us-central1-b",
  "GCSPath": "gs://gce-image-build-bucket/daisy/${USERNAME}",
  "Vars": {
    "build_date": {
      "Value": "${TIMESTAMP}",
      "Description": "Build datestamp used to version the image."
    },
    "workflow_root": {
      "Value": "/workflows",
      "Description": "Root of github workflows, defaults to /workflows in the container."
    },
    "gcs_url": {
      "Required": true,
      "Description": "The GCS path for the exported image tarball."
    }
  },
  "Sources": {
    "install_rhua.sh": "./install_rhua.sh"
  },
  "Steps": {
    "create-disk": {
      "CreateDisks": [
        {
          "Name": "disk-rhua",
          "SourceImage": "projects/rhel-cloud/global/images/family/rhel-8",
          "SizeGb": "50",
          "Type": "pd-ssd"
        }
      ]
    },
    "install-rhua": {
      "CreateInstances": [
        {
          "Name": "inst-rhua",
          "Disks": [{"Source": "disk-rhua"}],
          "MachineType": "e2-standard-4",
          "Metadata": {
            "blah": "blahblah"
          },
          "Scopes": ["maybe", "https://www.googleapis.com/auth/devstorage.read_write"],
          "StartupScript": "install_rhua.sh"
        }
      ]
    },
    "wait-install-rhua": {
      "Timeout": "60m",
      "WaitForInstancesSignal": [
        {
          "Name": "inst-rhua",
          "SerialOutput": {
            "Port": 1,
            "FailureMatch": "BuildFailed:",
            "SuccessMatch": "BuildSuccess:",
            "StatusMatch": "BuildStatus:"
          }
        }
      ]
    },
    "export-image": {
      "Timeout": "60m",
      "IncludeWorkflow": {
        "Path": "${workflow_root}/export/disk_export.wf.json",
        "Vars": {
          "destination": "${gcs_url}",
          "source_disk": "disk-rhua"
        }
      }
    }
  },
  "Dependencies": {
    "export-image": ["wait-install-rhua"],
    "wait-install-rhua": ["install-rhua"],
    "install-rhua": ["create-disk"]
  }
}
