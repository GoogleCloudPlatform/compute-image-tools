{
  "Name": "img-network-test",
  "Vars": {
    "source_image": {"Required": true, "Description": "Image to be tested"},
    "alias_ip": {"Value": "10.128.3.128", "Description": "Alias IP to be used (must match subnet)"},
    "alias_ip_mask": {"Value": "31", "Description": "Alias IP netmask length to be set (e.g: 32, 24, 16)"}
  },
  "Sources": {
    "testee.sh": "./network-testee.sh",
    "testee.ps1": "./network-testee.ps1",
    "testee-checker.sh": "./network-testee-checker.sh",
    "testee-checker.bat": "./network-testee-checker.bat",
    "test_files/test.py": "./network-tester.py",
    "test_files/utils.py": "../../linux_common/utils.py",
    "test_files/genips.py": "./genips.py",
    "startup_master_tester": "../../linux_common/bootstrap.py"
  },
  "Steps": {
    "create-testee-disk": {
      "CreateDisks": [
        {
          "Name": "disk-testee-img",
          "SourceImage": "${source_image}"
        }
      ]
    },
    "create-testee-checker-disk": {
      "CreateDisks": [
        {
          "Name": "disk-testee-checker-img",
          "SourceImage": "${source_image}"
        }
      ]
    },
    "create-tester-disk": {
      "CreateDisks": [
        {
          "Name": "disk-tester-img",
          "SourceImage": "projects/debian-cloud/global/images/family/debian-9"
        }
      ]
    },
    "create-testee-instance": {
      "CreateInstances": [
        {
          "Name": "inst-network-testee",
          "RealName": "inst-network-testee-${DATETIME}-${ID}",
          "Disks": [{"Source": "disk-testee-img"}],
          "Metadata": {
            "startup-script": "${SOURCE:testee.sh}",
            "windows-startup-script-ps1": "${SOURCE:testee.ps1}"
          },
          "NetworkInterfaces": [
            {
              "Network": "global/networks/default",
              "AccessConfigs": [{"Type": "ONE_TO_ONE_NAT"}],
              "AliasIpRanges": [{"ipCidrRange": "${alias_ip}/${alias_ip_mask}"}]
            }
          ]
        }
      ]
    },
    "create-testee-checker-instance": {
      "CreateInstances": [
        {
          "Name": "inst-network-testee-checker",
          "RealName": "inst-network-testee-checker-${DATETIME}-${ID}",
          "Disks": [{"Source": "disk-testee-checker-img"}],
          "Metadata": {
            "startup-script": "INSTANCE=inst-network-testee-${DATETIME}-${ID}; ${SOURCE:testee-checker.sh}",
            "windows-startup-script-bat": "SET INSTANCE=inst-network-testee-${DATETIME}-${ID} & ${SOURCE:testee-checker.bat}"
          }
        }
      ]
    },
    "create-tester-instance": {
      "CreateInstances": [
        {
          "Name": "inst-network-tester",
          "Disks": [{"Source": "disk-tester-img"}],
          "StartupScript": "startup_master_tester",
          "Metadata": {
            "files_gcs_dir": "${SOURCESPATH}/test_files",
            "script": "test.py",
            "prefix": "Test",
            "debian_install_google_api_python_client": "yes",
            "testee": "inst-network-testee-${DATETIME}-${ID}",
            "testee_forwarding_rule": "network-testee-forwarding-rule-${DATETIME}-${ID}",
            "alias_ip": "${alias_ip}",
            "alias_ip_mask": "${alias_ip_mask}",
            "zone": "${ZONE}",
            "project": "${PROJECT}"
          },
          "Scopes": [
            "https://www.googleapis.com/auth/devstorage.read_only",
            "https://www.googleapis.com/auth/compute"
          ]
        }
      ]
    },
    "create-testee-target-instance": {
      "CreateTargetInstances": [
        {
          "Name": "network-testee-target-instance",
          "RealName": "network-testee-target-instance-${DATETIME}-${ID}",
          "Instance": "inst-network-testee-${DATETIME}-${ID}"
        }
      ]
    },
    "create-testee-forwarding-rule": {
      "CreateForwardingRules": [
        {
          "Name": "network-testee-forwarding-rule",
          "RealName": "network-testee-forwarding-rule-${DATETIME}-${ID}",
          "Target": "network-testee-target-instance-${DATETIME}-${ID}",
          "PortRange": "80",
          "IPProtocol": "TCP"
        }
      ]
    },
    "wait-for-testee-instance": {
      "Timeout": "5m",
      "WaitForInstancesSignal": [
          {
          "Name": "inst-network-testee",
          "SerialOutput": {
            "Port": 1,
            "SuccessMatch": "BOOTED"
          }
        }
      ]
    },
    "wait-for-testee-checker-instance": {
      "Timeout": "5m",
      "WaitForInstancesSignal": [
        {
          "Name": "inst-network-testee-checker",
          "SerialOutput": {
            "Port": 1,
            "SuccessMatch": "DNS_Success",
            "FailureMatch": "DNS_Failed"
          }
        }
      ]
    },
    "wait-for-testee-check": {
      "WaitForInstancesSignal": [
        {
          "Name": "inst-network-tester",
          "SerialOutput": {
            "Port": 1,
            "SuccessMatch": "TestSuccess",
            "FailureMatch": "TestFailed"
          }
        }
      ]
    }
  },
  "Dependencies": {
    "create-testee-instance": ["create-testee-disk"],
    "wait-for-testee-instance": ["create-testee-instance"],
    "create-testee-target-instance": ["wait-for-testee-instance"],
    "create-testee-forwarding-rule": ["create-testee-target-instance"],

    "create-testee-checker-instance": ["create-testee-forwarding-rule", "create-testee-checker-disk"],
    "wait-for-testee-checker-instance": ["create-testee-checker-instance"],

    "create-tester-instance": ["wait-for-testee-checker-instance", "create-tester-disk"],
    "wait-for-testee-check": ["create-tester-instance"]
  }
}
