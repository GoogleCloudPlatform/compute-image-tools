{
  "Name": "inspect-disk",
  "DefaultTimeout": "5m",
  "Vars": {
    "pd_uri": {
      "Required": true,
      "Description": "PD that will be inspected (URI)."
    },
    "network": {
      "Value": "global/networks/default",
      "Description": "Network for worker instance"
    },
    "subnet": {
      "Value": "",
      "Description": "Subnet for worker instance"
    },
    "compute_service_account": {
      "Value": "default",
      "Description": "Service account that will be used by the created worker instance"
    }
  },
  "Sources": {
    "daisy-shim.sh": "daisy-shim.sh",
    "boot_inspect/src": "../inspection/src",
    "boot_inspect/setup.py": "../inspection/setup.py",
    "compute_image_tools_proto": "../../../proto/py"
  },
  "Steps": {
    "run-inspection": {
      "CreateInstances": [
        {
          "Name": "run-inspection",
          "Disks": [
            {
              "AutoDelete": true,
              "boot": true,
              "initializeParams": {
                "sourceImage": "projects/compute-image-tools/global/images/family/debian-9-worker"
              }
            },
            {
              "Source": "${pd_uri}"
            }
          ],
          "MachineType": "n1-standard-4",
          "StartupScript": "daisy-shim.sh",
          "networkInterfaces": [
            {
              "network": "${network}",
              "subnetwork": "${subnet}"
            }
          ],
          "ServiceAccounts": [
            {
              "Email": "${compute_service_account}",
              "Scopes": ["https://www.googleapis.com/auth/devstorage.read_write"]
            }
          ]
        }
      ]
    },
    "wait-for-signal": {
      "WaitForInstancesSignal": [
        {
          "Name": "run-inspection",
          "SerialOutput": {
            "Port": 1,
            "SuccessMatch": "Success:",
            "FailureMatch": ["Failed:", "WARNING Failed to download metadata script", "Failed to download GCS path"],
            "StatusMatch": "Status:"
          }
        }
      ]
    },
    "cleanup": {
      "DeleteResources": {
        "Instances": [
          "run-inspection"
        ]
      }
    }
  },
  "Dependencies": {
    "wait-for-signal": [
      "run-inspection"
    ],
    "cleanup": [
      "wait-for-signal"
    ]
  }
}
