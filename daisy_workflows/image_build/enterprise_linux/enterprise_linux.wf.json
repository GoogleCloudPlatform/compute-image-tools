{
  "Name": "build-el",
  "Vars": {
    "el_release": {"Required": true, "Description": "The EL release name."},
    "google_cloud_repo": {"Value": "stable", "Description": "The Google Cloud Repo branch to use."},
    "image_dest": {"Required": true, "Description": "The GCS directory destination to copy the image."},
    "installer_iso": {"Required": true, "Description": "The path to the EL installation ISO."},
    "license_id": {"Required": true, "Description": "The GCE license id."},
    "rhui_client_rpm": {"Description": "The RHEL rhui client RPM to use."}
  },
  "Sources": {
    "build_files/build_installer.py": "./build_installer.py",
    "build_files/installer.iso": "${installer_iso}",
    "build_files/utils.py": "../linux_common/utils.py",
    "build_files/kickstart": "./kickstart/",
    "build_files/ks_helpers.py": "./ks_helpers.py",
    "installerprep_startup_script": "../linux_common/bootstrap.py",
    "build_files/google-rhui-client.rpm": "${rhui_client_rpm}"
  },
  "Steps": {
    "setup-disks": {
      "CreateDisks": [
        {
          "Name": "disk-installerprep",
          "SourceImage": "projects/debian-cloud/global/images/family/debian-9",
          "SizeGb": "50",
          "Type": "pd-ssd"
        },
        {
          "Name": "disk-installer",
          "SizeGb": "50",
          "Type": "pd-ssd"
        },
        {
          "Name": "disk-install",
          "SizeGb": "10",
          "Type": "pd-ssd"
        }
      ]
    },
    "run-installer-prep": {
      "CreateInstances": [
        {
          "Name": "inst-installerprep",
          "Disks": [{"Source": "disk-installerprep"}, {"Source": "disk-installer"}],
          "MachineType": "n1-standard-4",
          "Metadata": {
            "build_files_gcs_dir": "${SOURCESPATH}/build_files",
            "build_script": "build_installer.py",
            "el_release": "${el_release}",
            "google_cloud_repo": "${google_cloud_repo}",
            "rhui_client_rpm": "${SOURCESPATH}/build_files/${rhui_client_rpm}"
          },
          "StartupScript": "installerprep_startup_script"
        }
      ]
    },
    "wait-installer-prep": {
      "Timeout": "60m",
      "WaitForInstancesSignal": [{"Name": "inst-installerprep", "Stopped": true}]
    },
    "cleanup-installer-prep": {
      "DeleteResources": {
        "Instances": ["inst-installerprep"]
      }
    },
    "run-installation": {
      "CreateInstances": [
        {
          "Name": "inst-build",
          "Disks": [{"Source": "disk-installer"}, {"Source": "disk-install"}],
          "MachineType": "n1-standard-4",
          "Metadata": {
            "build-files-gcs-dir": "${SOURCESPATH}/build_files",
            "license-id": "${license_id}",
            "google-cloud-repo": "${google_cloud_repo}",
            "el_release": "${el_release}",
            "serial-port-enable": "true",
            "upload-logs": "true"
          },
          "Scopes": [
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/devstorage.read_write"
          ]
        }
      ]
    },
    "wait-installation": {
      "Timeout": "60m",
      "WaitForInstancesSignal": [{"Name": "inst-build", "Stopped": true}]
    },
    "copy-to-dest": {
      "CopyGCSObjects": [
        {"Source": "${OUTSPATH}/image.tar.gz", "Destination": "${image_dest}/${DATETIME}-${el_release}/root.tar.gz"},
        {"Source": "${OUTSPATH}/synopsis.json", "Destination": "${image_dest}/${DATETIME}-${el_release}/synopsis.json"}
      ]
    }
  },
  "Dependencies": {
    "run-installer-prep": ["setup-disks"],
    "wait-installer-prep": ["run-installer-prep"],
    "cleanup-installer-prep": ["wait-installer-prep"],
    "run-installation": ["cleanup-installer-prep"],
    "wait-installation": ["run-installation"],
    "copy-to-dest": ["wait-installation"]
  }
}
