%post
# This runs during the image creation process on a VM in GCE.
# Using an explicit call to python because #! is flakey.
python << EOM
"""Collects data on the image. Stores it in synopsis.json."""

import collections
import json
import subprocess


def RunCmd(commandstring):
  """Runs a command and returns the output."""
  out = subprocess.Popen(commandstring, shell=True, stdout=subprocess.PIPE)
  return out.stdout.read()

# Create the package list.
packages = collections.OrderedDict()
yum_list_output = RunCmd('yum list installed')
start = yum_list_output.find('Installed Packages\n') + 19  # Start after this.
parts = yum_list_output[start:].split()
# yum list installed has three columns; we only care about columns 1 and 2.
for i in range(0, len(parts), 3):
  print i
  print 'mapping %s to %s' % (parts[i], parts[i+1])
  packages[parts[i]] = parts[i+1]

# Create the dictionary that will be used for the json.
synopsis_dict = {}
with open('/tmp/anaconda-ks.cfg', 'r') as kickstartfile:
  synopsis_dict['kickstartstring'] = kickstartfile.read()
synopsis_dict['installed_packages'] = packages

with open('/root/synopsis.json', 'w') as f:
  f.write(json.dumps(synopsis_dict))
EOM
%end
