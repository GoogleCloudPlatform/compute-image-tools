//  Copyright 2020 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

syntax = "proto3";

option go_package = ".;pb";

import "inspect.proto";

// OutputInfo records output info from the tools.
message OutputInfo {
  // Size of import/export sources (image/disk/file)
  repeated int64 sources_size_gb = 1;

  // Size of import/export targets (image/disk/file)
  repeated int64 targets_size_gb = 2;

  // Failure message of the command
  string failure_message = 3;

  // Failure message of the command without privacy info
  string failure_message_without_privacy_info = 4;

  // Each element is the serial output log of a worker instance.
  // This is only populated if the workflow fails.
  repeated string serial_outputs = 5;

  // Import file format
  string import_file_format = 6;

  // Size of import/export sources (image/disk/file) that was detected.
  // sources_size_gb, in contrast, contains the actual value. Ideally
  // these values will match; a mismatch indicates an error in our
  // detection.
  repeated int64 detected_sources_size_gb = 7;

  // Inflation type, which can be qemu or API.
  string inflation_type = 8;

  // Inflation time
  repeated int64 inflation_time_ms = 9;

  // Inflation time of the shadow disk.  It's for new API validation.
  repeated int64 shadow_inflation_time_ms = 10;

  // Shadow disk match result for shadow disk inflater. It's for new API
  // validation.
  string shadow_disk_match_result = 11;

  // Indicates whether the image is imported and marked as UEFI_COMPATIBLE.
  bool is_uefi_compatible_image = 12;

  // Indicates whether the image is auto-detected to be UEFI compatible.
  bool is_uefi_detected = 13;

  // Inspection results. Ref to the def of 'InspectionResults' to see details.
  InspectionResults inspection_results = 14;
}
