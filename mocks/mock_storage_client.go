//  Copyright 2019 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/gce_vm_image_import/domain (interfaces: StorageClientInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	storage "cloud.google.com/go/storage"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStorageClientInterface is a mock of StorageClientInterface interface
type MockStorageClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStorageClientInterfaceMockRecorder
}

// MockStorageClientInterfaceMockRecorder is the mock recorder for MockStorageClientInterface
type MockStorageClientInterfaceMockRecorder struct {
	mock *MockStorageClientInterface
}

// NewMockStorageClientInterface creates a new mock instance
func NewMockStorageClientInterface(ctrl *gomock.Controller) *MockStorageClientInterface {
	mock := &MockStorageClientInterface{ctrl: ctrl}
	mock.recorder = &MockStorageClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorageClientInterface) EXPECT() *MockStorageClientInterfaceMockRecorder {
	return m.recorder
}

// Buckets mocks base method
func (m *MockStorageClientInterface) Buckets(arg0 context.Context, arg1 string) *storage.BucketIterator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Buckets", arg0, arg1)
	ret0, _ := ret[0].(*storage.BucketIterator)
	return ret0
}

// Buckets indicates an expected call of Buckets
func (mr *MockStorageClientInterfaceMockRecorder) Buckets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Buckets", reflect.TypeOf((*MockStorageClientInterface)(nil).Buckets), arg0, arg1)
}

// CreateBucket mocks base method
func (m *MockStorageClientInterface) CreateBucket(arg0 context.Context, arg1, arg2 string, arg3 *storage.BucketAttrs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBucket", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBucket indicates an expected call of CreateBucket
func (mr *MockStorageClientInterfaceMockRecorder) CreateBucket(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBucket", reflect.TypeOf((*MockStorageClientInterface)(nil).CreateBucket), arg0, arg1, arg2, arg3)
}

// GetBucketAttrs mocks base method
func (m *MockStorageClientInterface) GetBucketAttrs(arg0 string) (*storage.BucketAttrs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketAttrs", arg0)
	ret0, _ := ret[0].(*storage.BucketAttrs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketAttrs indicates an expected call of GetBucketAttrs
func (mr *MockStorageClientInterfaceMockRecorder) GetBucketAttrs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketAttrs", reflect.TypeOf((*MockStorageClientInterface)(nil).GetBucketAttrs), arg0)
}
