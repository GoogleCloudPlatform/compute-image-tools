//  Copyright 2019 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/common/domain (interfaces: StorageObjectDeleterInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStorageObjectDeleterInterface is a mock of StorageObjectDeleterInterface interface
type MockStorageObjectDeleterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStorageObjectDeleterInterfaceMockRecorder
}

// MockStorageObjectDeleterInterfaceMockRecorder is the mock recorder for MockStorageObjectDeleterInterface
type MockStorageObjectDeleterInterfaceMockRecorder struct {
	mock *MockStorageObjectDeleterInterface
}

// NewMockStorageObjectDeleterInterface creates a new mock instance
func NewMockStorageObjectDeleterInterface(ctrl *gomock.Controller) *MockStorageObjectDeleterInterface {
	mock := &MockStorageObjectDeleterInterface{ctrl: ctrl}
	mock.recorder = &MockStorageObjectDeleterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorageObjectDeleterInterface) EXPECT() *MockStorageObjectDeleterInterfaceMockRecorder {
	return m.recorder
}

// DeleteObject mocks base method
func (m *MockStorageObjectDeleterInterface) DeleteObject(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObject", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteObject indicates an expected call of DeleteObject
func (mr *MockStorageObjectDeleterInterfaceMockRecorder) DeleteObject(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObject", reflect.TypeOf((*MockStorageObjectDeleterInterface)(nil).DeleteObject), arg0, arg1)
}
